pipeline {
    agent any

    environment {
        DOCKERHUB_CREDENTIALS = credentials('dockerhub')
        AWS_REGION = "us-east-1"
        CLUSTER_NAME = "comingsoon-cluster"
    }

    stages {
        stage('Docker Login') {
            steps {
                sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'
            }
        }

        stage('Build & Push Docker Image') {
            steps {
                sh """
                cd comingsoon/
                ansible-playbook playbook.yml
                """
            }
        }
/*
        stage('Create Cluster') {
            steps {
                withCredentials([[
                    $class: 'AmazonWebServicesCredentialsBinding',
                    credentialsId: "aws-credentials",
                    accessKeyVariable: 'AWS_ACCESS_KEY_ID',
                    secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'
                ]]) {
                    sh """
                    eksctl create cluster \
                        --name $CLUSTER_NAME \
                        --region $AWS_REGION \
                        --node-type t3.micro \
                        --nodes 1 \
                        --nodes-min 1 \
                        --nodes-max 1 \
                        --managed \
                        --timeout=40m
                    aws eks update-kubeconfig --region $AWS_REGION --name $CLUSTER_NAME
                    """
                }
            }
        }
*/
        stage('Create Namespace') {
            steps {
                withCredentials([[
                    $class: 'AmazonWebServicesCredentialsBinding',
                    credentialsId: "aws-credentials",
                    accessKeyVariable: 'AWS_ACCESS_KEY_ID',
                    secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'
                ]]) {
                    sh "kubectl create namespace comingsoon || echo 'Namespace exists, skipping...'"
                }
            }
        }

        stage('Deploy App') {
            steps {
                withCredentials([[
                    $class: 'AmazonWebServicesCredentialsBinding',
                    credentialsId: "aws-credentials",
                    accessKeyVariable: 'AWS_ACCESS_KEY_ID',
                    secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'
                ]]) {
                    sh """
                    cd comingsoon/k8s
                    kubectl -n comingsoon apply -f deployment.yaml
                    kubectl -n comingsoon apply -f services.yaml
                    """
                }
            }
        }

        stage('Delete Cluster (Optional)') {
            when {
                expression { return false } // Set to true if you want to delete after deploy
            }
            steps {
                withCredentials([[
                    $class: 'AmazonWebServicesCredentialsBinding',
                    credentialsId: "aws-credentials",
                    accessKeyVariable: 'AWS_ACCESS_KEY_ID',
                    secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'
                ]]) {
                    sh "eksctl delete cluster --name $CLUSTER_NAME --region $AWS_REGION"
                }
            }
        }
    }
}



